name: Upload clusttraj to PyPI when tag is pushed

on: push

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install pypa/build
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install build
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  testpypi-publish:
    name: upload release to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags/')  # only publish to TestPyPI on tag pushes
    environment:
      name: release
      url: https://test.pypi.org/p/clusttraj

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution packages to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  pypi-publish:
    name: upload release to PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    environment: 
      name: release
      url: https://pypi.org/p/clusttraj
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution packages to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign and upload them to GitHub Release
    needs:
    - pypi-publish
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags/') # only upload to GitHub Release on tag pushes
    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release create
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'
